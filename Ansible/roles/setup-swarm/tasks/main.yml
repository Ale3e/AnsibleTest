---
# tasks file for setup-swarm

#yum update -y
- name: "Update Packages"
  yum:
    name: '*'
    state: latest
  become: true

# firewall-cmd --permanent --add-port=2376/tcp
# firewall-cmd --permanent --add-port=2377/tcp
# firewall-cmd --permanent --add-port=7946/tcp
# firewall-cmd --permanent --add-port=7946/udp
# firewall-cmd --permanent --add-port=4789/udp
# firewall-cmd --permanent --add-port=80/tcp
- name: "Add port to firewalld"
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 2376/tcp
    - 2377/tcp
    - 7946/tcp
    - 7946/udp
    - 4789/udp
    - 80/tcp
  become: true

# firewall-cmd --reload
- name: "Reload service firewalld"
  systemd:
    name: firewalld
    state: reloaded
  become: true

#sudo systemctl restart docker
- name: "Restart docker"
  systemd:
    name: docker
    state: restarted
  become: true

#docker swarm init
- name: "Init a new swarm"
  community.docker.docker_swarm:
    state: present
  register: docker_swarm
  when: swarm_role == 'manager'
  run_once: true

#add worker node
- name: "Add nodes"
  community.docker.docker_swarm:
    state: join
    advertise_addr: "{{hostvars['centosvm1'][ansible_default_ipv4][address]}}"
    join_token: "{{docker_swarm.swarm_facts.JoinTokens.Worker}}"
    remote_addrs: [ "{{hostvars['centosvm1'][ansible_default_ipv4][address]}}:2377" ]
  when: swarm_role == 'worker'

#docker service create -p 80:80 --name webserver --replicas 5 httpd
- name: "Init a new swarm"
  community.docker.docker_compose:
    project_name: flask
    definition:
      version: '2'
      services:
        webserver:
          image: httpd
  when: swarm_role == 'manager'
  run_once: true
